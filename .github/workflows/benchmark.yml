name: Benchmark

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  benchmark:
    name: Performance Benchmark
    runs-on: ubuntu-latest
    permissions:
      contents: write
      deployments: write
      pull-requests: write
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-bench-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache cargo index
        uses: actions/cache@v4
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-bench-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache cargo build
        uses: actions/cache@v4
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-bench-${{ hashFiles('**/Cargo.lock') }}

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y gnuplot

      - name: Run benchmarks
        run: |
          cargo bench --all-features -- --output-format bencher | tee output.txt

      - name: Store benchmark result
        uses: benchmark-action/github-action-benchmark@v1
        with:
          name: VisualVault Benchmark
          tool: 'cargo'
          output-file-path: output.txt
          github-token: ${{ secrets.GITHUB_TOKEN }}
          auto-push: true
          alert-threshold: '50%'
          comment-on-alert: true
          alert-comment-cc-users: '@mikeleppane'
          summary-always: true
          
      - name: Upload benchmark results
        uses: actions/upload-artifact@v4
        with:
          name: benchmark-results
          path: target/criterion/

  benchmark-compare:
    name: Benchmark Comparison
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install cargo-criterion
        run: cargo install cargo-criterion

      - name: Cache dependencies
        uses: Swatinem/rust-cache@v2
        with:
          key: benchmark

      - name: Checkout base branch
        run: |
          git fetch origin ${{ github.base_ref }}
          git checkout origin/${{ github.base_ref }}

      - name: Run base benchmarks
        run: |
          cargo criterion --message-format json > base-benchmarks.json

      - name: Checkout PR branch
        run: |
          git checkout ${{ github.head_ref }}

      - name: Run PR benchmarks
        run: |
          cargo criterion --message-format json > pr-benchmarks.json

      - name: Compare benchmarks
        run: |
          cargo install critcmp
          critcmp base-benchmarks.json pr-benchmarks.json > comparison.txt

      - name: Comment PR with comparison
        uses: actions/github-script@v7
        if: github.event_name == 'pull_request'
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const comparison = fs.readFileSync('comparison.txt', 'utf8');
            
            const body = `## ðŸ“Š Benchmark Comparison
            
            \`\`\`
            ${comparison}
            \`\`\`
            
            <details>
            <summary>Benchmark Details</summary>
            
            - **Base**: \`${{ github.base_ref }}\`
            - **Head**: \`${{ github.head_ref }}\`
            - **Runner**: \`${{ runner.os }}\`
            
            </details>`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            });
